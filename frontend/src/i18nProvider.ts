//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';

const enResources = {
  resources: {
    WorldCricketMatches: {
      name: 'World Cricket Matches',
      fields: {
        location: 'Location',
        teamsInvolved: 'Teams Involved',
        matchDate: 'Match Date',
        id: 'id',
      },
    },
    CountryMatches: {
      name: 'Country Matches',
      fields: { allTeams: 'All Teams', id: 'id' },
    },
    Teams: {
      name: 'Teams',
      fields: {
        teamName: 'Team Name',
        teamLogo: 'Team Logo',
        captain: 'Captain',
        playersBowlerOrBatsman: 'Players Bowler Or Batsman',
        id: 'id',
      },
    },
    User: {
      name: 'User',
      fields: {
        mobileNumber: 'Mobile Number',
        password: 'Password',
        preferredLanguage: 'Preferred Language',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    WorldCricketMatches: {
      name: 'World Cricket Matches (fr)',
      fields: {
        location: 'Location (fr)',
        teamsInvolved: 'Teams Involved (fr)',
        matchDate: 'Match Date (fr)',
        id: 'id',
      },
    },
    CountryMatches: {
      name: 'Country Matches (fr)',
      fields: { allTeams: 'All Teams (fr)', id: 'id' },
    },
    Teams: {
      name: 'Teams (fr)',
      fields: {
        teamName: 'Team Name (fr)',
        teamLogo: 'Team Logo (fr)',
        captain: 'Captain (fr)',
        playersBowlerOrBatsman: 'Players Bowler Or Batsman (fr)',
        id: 'id',
      },
    },
    User: {
      name: 'User (fr)',
      fields: {
        mobileNumber: 'Mobile Number (fr)',
        password: 'Password (fr)',
        preferredLanguage: 'Preferred Language (fr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);

const translations = { en, fr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Fran√ßais' },
  ],
);
